[gd_resource type="VisualShader" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
source = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 0, 0 ) ]
operator = 7

[sub_resource type="VisualShaderNodeInput" id=4]

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 _tex_read = texture( TEXTURE , n_out3p0.xy );
		n_out2p0 = _tex_read.rgb;
		n_out2p1 = _tex_read.a;
	}

// ColorOp:7
	vec3 n_in7p1 = vec3(1.00000,0.00000,0.00000);
	vec3 n_out7p0;
	{
		float base=n_out2p0.x;
		float blend=n_in7p1.x;
		if (base < 0.5) {
			n_out7p0.x = (base * (blend+0.5));
		} else {
			n_out7p0.x = (1.0 - (1.0-base) * (1.0-(blend-0.5)));
		}
	}
	{
		float base=n_out2p0.y;
		float blend=n_in7p1.y;
		if (base < 0.5) {
			n_out7p0.y = (base * (blend+0.5));
		} else {
			n_out7p0.y = (1.0 - (1.0-base) * (1.0-(blend-0.5)));
		}
	}
	{
		float base=n_out2p0.z;
		float blend=n_in7p1.z;
		if (base < 0.5) {
			n_out7p0.z = (base * (blend+0.5));
		} else {
			n_out7p0.z = (1.0 - (1.0-base) * (1.0-(blend-0.5)));
		}
	}

// Output:0
	COLOR.rgb = n_out7p0;
	COLOR.a = n_out2p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 96, -2.52752 )
mode = 1
flags/light_only = false
nodes/vertex/0/position = Vector2( 420, 140 )
nodes/vertex/2/node = SubResource( 4 )
nodes/vertex/2/position = Vector2( 200, 100 )
nodes/fragment/0/position = Vector2( 900, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 380, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 160, 80 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( 740, 40 )
nodes/fragment/connections = PoolIntArray( 3, 0, 2, 0, 2, 1, 0, 1, 2, 0, 7, 0, 7, 0, 0, 0 )
